<?php
/**
 * WebEnq4
 *
 *  LICENSE
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @package    Webenq_Models
 * @copyright  Copyright (c) 2012 Nivocer B.V. (http://www.nivocer.com)
 * @license    http://www.gnu.org/licenses/agpl.html
 */

/**
 * Webenq_Model_ReportElement
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    Webenq_Models
 * @author     Bart Huttinga <b.huttinga@nivocer.com>
 */
class Webenq_Model_ReportElement extends Webenq_Model_Base_ReportElement
{
    public function getXpath($questionnaireQuestionId)
    {
        $questionnaireQuestion = Doctrine_Core::getTable('Webenq_Model_QuestionnaireQuestion')
        ->find($questionnaireQuestionId);

        return $questionnaireQuestion->getXpath();
    }
    /**
     *
     * @param array $qqIds
     * @return json string with questionnaire-questionId, scale
     */

    public function getScaleType($qqIds)
    {
        $returnArray=array();
        //get closed question info
        foreach ($qqIds as $qqId) {
            $qq_apg = Doctrine_Query::create()
            ->from('Webenq_Model_QuestionnaireQuestion qq')
            ->innerjoin('qq.AnswerPossibilityGroup apg')
            ->where('qq.id = ?', $qqId)
            ->limit(1)
            ->fetchArray();
            if ($qq_apg) {
                $returnArray[$qqId]="scale".$qq_apg[0]['AnswerPossibilityGroup']['number'];
            } else {
                //it is not a scale/closed question
                //check if it is a grade question (has validator grade)
                $qq_cp =Doctrine_Query::create()
                ->from('Webenq_Model_QuestionnaireQuestion qq')
                ->innerjoin('qq.CollectionPresentation cp')
                ->where('qq.id = ?', $qqId)
                ->limit(1)
                ->fetchArray();

                $validators=unserialize($qq_cp[0]['CollectionPresentation'][0]['validators']);
                if (is_array($validators) && in_array('grade', $validators)) {
                    $returnArray[$qqId]="open10";
                }
            }
        }
        return $returnArray;


    }
}