<?php

/**
 * Webenq_Model_AnswerDomainItem
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    Webenq_Models
 * @subpackage
 * @author     Nivocer <webenq@nivocer.com>
 * @version    SVN: $Id: Builder.php,v 1.2 2011/07/12 13:39:03 bart Exp $
 */
class Webenq_Model_AnswerDomainItem extends Webenq_Model_Base_AnswerDomainItem
{
    /**
     * Fills array with answer domain items, and adds translations
     *
     * @param bool $deep
     * @param bool $prefixKey Not used
     * @return array
     * @see Doctrine_Record::fromArray()
     */
    public function toArray($deep = true, $prefixKey = false)
    {
        $result = parent::toArray($deep, $prefixKey);

        if ($deep) {
            // @todo We should find a way to do this via the I18n behavior, of find out why 'deep=true' doesn't do this
            $result['Translation'] = $this->Translation->toArray();

            // @todo Remove hacking the translations into form-formatted array to be able to compare with original in tests
            if (is_array($result['Translation'])) {
                foreach ($result['Translation'] as $lang => $record) {
                    foreach ($record as $field => $value) {
                        if (($field != 'id') && ($field != 'lang')) {
                            $result[$field][$lang] = $value;
                        }
                    }
                }
            }
        }

        return $result;
    }

    /**
     * Import data from array
     *
     * @todo hard-coded dealing with Translation, should change
     * @param string $array  array of data, see link for documentation
     * @param bool   $deep   whether or not to act on relations
     * @return void
     * @see Doctrine_Record::fromArray()
     */
    public function fromArray(array $array, $deep = true)
    {
        if (isset($array['label'])) {
            if (is_array($array['label'])) {
                foreach ($array['label'] as $lang => $label) {
                    $array['Translation'][$lang]['label'] = $label;
                }
            }
        }

        parent::fromArray($array, $deep);
    }
}