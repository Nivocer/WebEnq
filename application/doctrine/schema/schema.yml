# =========================================
# ===== QUESTIONNAIRE-RELATED CLASSES =====
# =========================================

Questionnaire:
  actAs:
    WebEnq4_Template_I18n:
      fields: [title]
  columns:
    title: string(255)
    category_id: integer
    default_language:
      type: string(2)
      fixed: false
      default: en
      notnull: true
    date_start:
      type: timestamp(25)
      default: '2012-01-01 00:00:00'
      notnull: true
    date_end:
      type: timestamp(25)
      default: '2050-01-01 00:00:00'
      notnull: true
    active: # @todo make it a boolean
      type: integer(1)
      fixed: false
      unsigned: false
      default: '1'
      notnull: true
    meta: # @todo to be removed
      type: string()
      fixed: false
      unsigned: false
      notnull: false
    weight: # @todo to be removed
      type: int
    questionnaire_node_id: integer
  relations:
    Category:
      onUpdate: CASCADE
      onDelete: RESTRICT
    QuestionnaireNode:

#
# ===== QUESTIONNAIRE NODE HIERARCHY CLASSES =====
#
QuestionnaireNode:
  actAs:
    NestedSet:
      hasManyRoots: true
  columns:
    questionnaire_element_id: integer
  relations:
    QuestionnaireElement:
QuestionnaireGroupNode:
  inheritance: 
    extends: QuestionnaireNode
    type: column_aggregation
QuestionnairePageNode:
  inheritance: 
    extends: QuestionnaireGroupNode
    type: column_aggregation
QuestionnaireQuestionNode:
  inheritance: 
    extends: QuestionnaireNode
    type: column_aggregation
QuestionnaireTextNode:
  inheritance: 
    extends: QuestionnaireNode
    type: column_aggregation

#
# ===== QUESTIONNAIRE ELEMENT CLASSES =====
#
QuestionnaireElement:
  columns:
    name: string
    # hash: string
    # advanced save feature for later: md5($this->toArray()->serialize()), then
    # change save to check if the md5 hash already exists - if so, use the id
    # of the record instead of creating a new record
QuestionnaireGroupElement:
  inheritance: 
    extends: QuestionnaireElement
    type: column_aggregation
QuestionnairePageElement:
  inheritance:
    extends: QuestionnaireGroupElement
    type: column_aggregation
QuestionnaireQuestionElement:
  inheritance: 
    extends: QuestionnaireElement
    type: column_aggregation
QuestionnaireTextElement:
  inheritance: 
    extends: QuestionnaireElement
    type: column_aggregation

# =========================================
# ===== ANSWER DOMAIN-RELATED CLASSES =====
# =========================================
AnswerDomain:
  actAs:
    WebEnq4_Template_I18n:
      fields: [name]
  columns:
    name: string
    validators: array
    filters: array
    options: array # contains default properties that the Question can override,
                   # e.g. presentation form, textfield width & height, show null values
AnswerDomainText:
  inheritance:
    extends: AnswerDomain
    type: column_aggregation
  columns:
    min_length: integer
    max_length: integer
AnswerDomainNumeric:
  inheritance:
    extends: AnswerDomain
    type: column_aggregation
  columns:
    min: float
    max: float
AnswerDomainChoice:
  inheritance:
    extends: AnswerDomain
    type: column_aggregation
  columns:
    answer_domain_item_id: integer
    min_choices: integer
    max_choices: integer
  relations:
    AnswerDomainItem:
AnswerDomainItem:
  actAs:
    WebEnq4_Template_I18n:
      fields: [label]
    NestedSet:
      hasManyRoots: true
  columns:
    label: string
    value: string
    isNullValue: boolean
    isActive: boolean
    isHidden: boolean

# ====================================
# ===== CATEGORY-RELATED CLASSES =====
# ====================================

Category:
  actAs:
    WebEnq4_Template_I18n:
      fields: [text]
  columns:
    active:
      type: integer(1)
      fixed: false
      unsigned: false
      default: '1'
      notnull: true
    weight:
      type: integer(4)
      fixed: false
      unsigned: false
      default: 0
      notnull: true
    text: string(255)
  relations:
    Questionnaire:
      local: id
      foreign: category_id
      type: many

# =========================
# ===== "THE REST..." =====
# =========================

Answer:
  tableName: answer
  columns:
    answerPossibility_id: integer
    text:
      type: string()
      fixed: false
      unsigned: false
      notnull: false
    respondent_id: integer
    questionnaire_question_id: integer
    timestamp:
      type: timestamp(25)
      fixed: false
      unsigned: false
      notnull: true
  relations:
    AnswerPossibility:
      local: answerPossibility_id
      foreignKeyName: answer_answerPossibility_answerPossibility_id_fk
      type: one
      onUpdate: RESTRICT
      onDelete: RESTRICT
    QuestionnaireQuestion:
      foreignKeyName: answer_questionnaire_question_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
    Respondent:
      foreignKeyName: answer_respondent_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
AnswerPossibility:
  tableName: answerPossibility
  columns:
    active:
      type: integer(1)
      fixed: false
      unsigned: false
      default: 1
      notnull: true
    answerPossibilityGroup_id: integer
    value:
      type: integer(4)
      fixed: false
      unsigned: false
      notnull: false
  relations:
    AnswerPossibilityGroup:
      local: answerPossibilityGroup_id
      foreign: id
      foreignKeyName: answerPossibility_answerPossibilityGroup_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
    Answer:
      local: id
      foreign: answerPossibility_id
      type: many
    AnswerPossibilityText:
      local: id
      foreign: answerPossibility_id
      type: many
AnswerPossibilityGroup:
  tableName: answerPossibilityGroup
  columns:
    name:
      type: string(64)
      fixed: false
      unsigned: false
      notnull: false
    number:
      type: integer(4)
      fixed: false
      unsigned: true
      notnull: false
    measurement_level:
      type: enum(10)
      fixed: false
      unsigned: false
      values:
        - metric
        - non-metric
      default: non-metric
      notnull: true
  relations:
    AnswerPossibility:
      local: id
      foreign: answerPossibilityGroup_id
      type: many
    QuestionnaireQuestion:
      local: id
      foreign: answerPossibilityGroup_id
      type: many
AnswerPossibilityNullValue:
  tableName: answerPossibilityNullValue
  columns:
    value:
      type: string(64)
      fixed: false
      unsigned: false
      notnull: false
AnswerPossibilityText:
  tableName: answerPossibilityText
  columns:
    text:
      type: string(255)
      fixed: false
      unsigned: false
      notnull: true
    language:
      type: string(2)
      fixed: false
      unsigned: false
      notnull: true
    answerPossibility_id: integer
  relations:
    AnswerPossibility:
      local: answerPossibility_id
      foreign: id
      foreignKeyName: answerPossibilityText_answerPossibility_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
    AnswerPossibilityTextSynonym:
      local: id
      foreign: answerPossibilityText_id
      type: many
AnswerPossibilityTextSynonym:
  tableName: answerPossibilityTextSynonym
  columns:
    text:
      type: string(255)
      fixed: false
      unsigned: false
      notnull: true
    answerPossibilityText_id: integer
  relations:
    AnswerPossibilityText:
      local: answerPossibilityText_id
      foreign: id
      foreignKeyName: answerPossibilityTextSynonym_answerPossibilityText_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
CollectionPresentation:
  tableName: collectionPresentation
  columns:
    parent_id: integer
    questionnaire_question_id: integer
    type:
      type: string(64)
      fixed: false
      unsigned: false
      notnull: true
    filters:
      type: string()
      fixed: false
      unsigned: false
      notnull: false
    validators:
      type: string()
      fixed: false
      unsigned: false
      notnull: false
    page:
      type: integer(4)
      fixed: false
      unsigned: false
      default: 1
      notnull: true
    weight:
      type: integer(4)
      fixed: false
      unsigned: false
      default: 0
      notnull: true
  relations:
    QuestionnaireQuestion:
      foreignKeyName: collectionPresentation_questionnaire_question_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
MigrationVersion:
  tableName: migration_version
  columns:
    version:
      type: integer(4)
      fixed: false
      unsigned: false
      notnull: false
Question:
  tableName: question
  columns:
    created:
      type: timestamp(25)
      fixed: false
      unsigned: false
      notnull: true
  relations:
    QuestionText:
      local: id
      foreign: question_id
      type: many
    QuestionnaireQuestion:
      local: id
      foreign: question_id
      type: many
Question_Closed:
  inheritance:
    extends: Question
    type: simple
Question_Closed_Percentage:
  inheritance:
    extends: Question_Closed
    type: simple
Question_Closed_Scale:
  inheritance:
    extends: Question_Closed
    type: simple
Question_Closed_Scale_Two:
  inheritance:
    extends: Question_Closed_Scale
    type: simple
Question_Closed_Scale_Three:
  inheritance:
    extends: Question_Closed_Scale
    type: simple
Question_Closed_Scale_Four:
  inheritance:
    extends: Question_Closed_Scale
    type: simple
Question_Closed_Scale_Five:
  inheritance:
    extends: Question_Closed_Scale
    type: simple
Question_Closed_Scale_Six:
  inheritance:
    extends: Question_Closed_Scale
    type: simple
Question_Closed_Scale_Seven:
  inheritance:
    extends: Question_Closed_Scale
    type: simple
Question_Open:
  inheritance:
    extends: Question
    type: simple
Question_Open_Date:
  inheritance:
    extends: Question_Open
    type: simple
Question_Open_Email:
  inheritance: 
    extends: Question_Open
    type: simple
Question_Open_Number:
  inheritance: 
    extends: Question_Open
    type: simple
Question_Open_Text:
  inheritance:
    extends: Question_Open
    type: simple
QuestionGroup:
  tableName: questionGroup
  columns:
    name:
      type: string(63)
      fixed: false
      unsigned: false
      notnull: false
  relations:
    QuestionnaireQuestion:
      local: id
      foreign: questionGroup_id
      type: many
QuestionText:
  tableName: questionText
  columns:
    text:
      type: string(255)
      fixed: false
      unsigned: false
      notnull: true
    language:
      type: string(2)
      fixed: false
      unsigned: false
      notnull: true
    question_id: integer
  relations:
    Question:
      foreignKeyName: questionText_question_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
QuestionnaireQuestion:
  tableName: questionnaire_question
  columns:
    questionnaire_id: integer
    question_id: integer
    answerPossibilityGroup_id: integer
    questionGroup_id: integer
    type:
      type: enum(8)
      fixed: false
      unsigned: false
      values:
        - open
        - single
        - multiple
        - hidden
      default: open
      notnull: true
    meta:
      type: string()
      fixed: false
      unsigned: false
      notnull: false
  relations:
    Questionnaire:
      foreignKeyName: questionnaire_question_questionnaire_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
    Question:
      foreignKeyName: questionnaire_question_question_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
    AnswerPossibilityGroup:
      local: answerPossibilityGroup_id
      foreignKeyName: questionnaire_question_answerPossibilityGroup_id_fk
      type: one
      onUpdate: RESTRICT
      onDelete: RESTRICT
    QuestionGroup:
      local: questionGroup_id
      foreignKeyName: questionnaire_question_questionGroup_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
    Answer:
      local: id
      foreign: questionnaire_question_id
      type: many
    CollectionPresentation:
      local: id
      foreign: questionnaire_question_id
      type: many
    Report:
      local: id
      foreign: split_qq_id
      type: many
    ReportPresentation:
      local: id
      foreign: questionnaire_question_id
      type: many
Report:
  tableName: report
  columns:
    questionnaire_id: integer
    language:
      type: string(5)
      notnull: true
    customer:
      type: string(64)
      notnull: true
    split_qq_id: integer
    output_dir:
      type: string(255)
      notnull: true
    output_name:
      type: string(255)
      notnull: true
    output_format:
      type: string(5)
      notnull: true
    orientation:
      type: enum(1)
      values:
        - a
        - p
        - l
      default: a
      notnull: true
  relations:
    ReportTitle:
      local: id
      foreign: report_id
      type: many
    Questionnaire:
      foreignKeyName: report_questionnaire_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
    QuestionnaireQuestion:
      local: split_qq_id
      foreignKeyName: report_split_qq_id_fk
      type: one
      onUpdate: SET NULL
      onDelete: SET NULL
    ReportElement:
      local: id
      foreign: report_id
      type: many
ReportTitle:
  tableName: reportTitle
  columns:
    text:
      type: string(255)
      fixed: false
      unsigned: false
      notnull: true
    language:
      type: string(2)
      fixed: false
      unsigned: false
      notnull: true
    report_id: integer
  relations:
    Report:
      foreignKeyName: reportTitle_report_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
ReportElement:
  tableName: reportElement
  columns:
    report_id: integer
    data:
      type: string
      notnull: false
    sort:
      type: integer(4)
      default: 0
  relations:
    Report:
      foreignKeyName: reportElement_report_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
ReportPresentation:
  tableName: reportPresentation
  columns:
    questionnaire_question_id: integer
    type:
      type: string(64)
      fixed: false
      unsigned: false
      notnull: true
  relations:
    QuestionnaireQuestion:
      foreignKeyName: reportPresentation_questionnaire_question_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
Resource:
  tableName: resource
  columns:
    name:
      type: string(64)
      fixed: false
      unsigned: false
      notnull: true
    description:
      type: string(255)
  indexes:
    unique-name:
      fields: [name]
      type: unique      
  relations:
    RoleResource:
      local: id
      foreign: resource_id
      type: many
      onUpdate: CASCADE
      onDelete: CASCADE
Respondent:
  tableName: respondent
  columns:
    questionnaire_id: integer
  relations:
    Questionnaire:
      foreignKeyName: respondent_questionnaire_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
    Answer:
      local: id
      foreign: respondent_id
      type: many
Role:
  tableName: role
  columns:
    name:
      type: string(64)
      fixed: false
      unsigned: false
      notnull: true
  relations:
    RoleResource:
      local: id
      foreign: role_id
      type: many
    User:
      local: id
      foreign: role_id
      type: many
RoleResource:
  tableName: role_resource
  columns:
    role_id: integer
    resource_id: integer
  relations:
    Role:
      foreignKeyName: role_resource_role_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
    Resource:
      foreignKeyName: role_resource_resource_id_fk
      type: one
      onUpdate: CASCADE
      onDelete: CASCADE
User:
  tableName: user
  columns:
    username:
      type: string(64)
      fixed: false
      unsigned: false
      notnull: true
    password:
      type: string(64)
      fixed: false
      unsigned: false
      notnull: true
    fullname:
      type: string(64)
      fixed: false
      unsigned: false
      notnull: true
    api_key:
      type: string(64)
      fixed: false
      unsigned: false
      notnull: true
    created:
      type: timestamp(25)
      fixed: false
      unsigned: false
      notnull: true
    lastlogin:
      type: timestamp(25)
      fixed: false
      unsigned: false
      notnull: true
    role_id: integer
  relations:
    Role:
      foreignKeyName: user_role_id_fk
      type: one
      onUpdate: RESTRICT
      onDelete: RESTRICT
Session:
  tableName: session
  columns:
    # required: specific id column
    id:
      type: string(64)
      fixed: false
      unsigned: true
      primary: true
      autoincrement: false
    value:
      type: blob
      fixed: false
      unsigned: false
      notnull: true
    timestamp:
      type: timestamp(25)
      fixed: false
      unsigned: false
      notnull: true
