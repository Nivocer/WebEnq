WEBENQ4

WebEnq4 can be used to manage questionnaires and report definitions, import
data sets, and generate reports in various formats. It is under active
development to be extended with more import and export options.

The application builds on a number of tools and technologies, most notably: 
PHP, Zend, PEAR, Java, Jasper, Ant

We use Xforms and Jasper's Jrxml to communicate between the core system and the
Jasper report engine.


REQUIREMENTS
============

Requirements include Debian/Ubuntu package names.

For the application:

* PHP 5.2+ (5.3+ preferred)
	Packages: php

* Java runtime engine and Java SDK
	Packages: default-jre-headless and default-jdk or alternatives to those 
* Ant 1.8+
	Packages: ant, ant-optional  


For the test suite:

* PEAR
	Packages: php-pear

* PHPUnit 3.5+ 
	Can be installed via PEAR from the PHPUnit channel:

	* Make sure you have the channels for PHPUnit and dependencies
  
    pear channel-discover pear.phpunit.de
    pear channel-discover components.ez.no
    pear channel-discover pear.symfony-project.com
  
    * Install PHPUnit
  
    pear install phpunit/PHPUnit

Other testing/development tools

   http://pear.pdepend.org/
   pear install PHP_CodeSniffer
   pecl install xdebug
   pear install pear/PHPDocumentor
   
* PHP Sqlite module
	Packages: php5-sqlite
    

INSTALLATION
============

Command-line instructions to get webenq up and running.

PUT THE CODE IN THE RIGHT PLACE AND CONFIGURE YOUR INSTANCE
===========================================================

In a directory of choice:
	git clone https://github.com/Nivocer/webenq

	
Choose a name for your instance and set an environment variable APPLICATION_ENV
to that name. If APPLICATION_ENV is not set, 'production' will be used by default.
To set the APPLICATION_ENV variable put this in public/.htaccess

    SetEnv APPLICATION_ENV my-sandbox

Now set up the configuration for your instance. To do so, do NOT modify
application/configs/application.ini, but copy override.ini.sample to override.ini 
and adjust to set or override configuration settings:

    [my-sandbox : production]
    db.params.dsn = "mysql://myname:secret@127.0.0.1:3306/webenq4"
	
or:
	
	[my-sandbox : production]
	db.params.host     = "127.0.0.1"
	db.params.port     = "3306"
	db.params.dbname   = "webenq4"
	db.params.username = "myname"
	db.params.password = "secret"
	
These examples will take the configuration settings from the section 'production' in
application/config/application.ini, then override it with the settings from the section
'production' in application/config/override.ini, and then override it with the settings
in the section 'my-sandbox' in application/config/override.ini.

Note: if db.params.dsn is set all other db.params.* settigns will be ignored.


PREPARE THE DATABASE
====================

Manually create the database for your instance. Then populate it with an initial
set of data by running:
	cd bin
	chmod u+x doctrine
	./install
	
PLEASE NOTE THAT THIS WILL DELETE ALL DATA FROM YOUR DATABASE!

CHECK IMPROVE/WRITE PERMISSONS
==============================
writable for webserver:
logs/application.log
java/tempout/test
public/reports


RUN THE TEST SUITE
==================

To check the test suite:

	cd tests
    phpunit
    
The results will be available via .../tests/ at web location of your 
installation.


LOGIN
=====
Default usernames: admin, admin2, admin3
Default password: webenq


JASPER SERVER
=============

(to be documented)
/application/controller/JasperController.php expects JAVA_HOSTS on localhost:8081