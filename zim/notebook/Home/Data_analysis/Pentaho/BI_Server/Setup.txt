Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.4
Creation-Date: 2013-10-22T15:29:06+02:00

====== Setup ======

===== Installation =====
All-in-one stack (includes a Tomcat server)
* Download the BI Platform from http://wiki.pentaho.com/display/COM/Latest+Stable+Builds (Business Intelligence Server, 4.8.0-stable)
* Unpack in destination location: this creates directories administration-console and biserver-ce
	* enable group write permissions: chmod -R g+w administration-console/ biserver-ce/
* Add the mysql connector java library (see below)
* Make sure connections on localhost to various ports are allowed in the firewall (at least 8005, 8009, 8080, 9001)

==== BI Server ====

=== Running in Java 7 ===
Java 7 is a bit more strict about custom sorts. This gives an error with Saiku answer label sorting. Fix this in start-pentaho.sh by adding to export CATALINA_OPTS:
	''-Djava.util.Arrays.useLegacyMergeSort=true''


=== Start-up ===
* go to the directory biserver-ce
* start via ./start-pentaho.sh
* available via http://localhost:8080/pentaho
* "evaluation login" user/password: joe/password
* Admin features via  http://localhost:8080/pentaho/Admin

=== Install Saiku ===
* within the Pentaho User Console, go to Tools > Marketplace
* install the Saiku Analytics plugin
* the Saiku plugin README says it is possible to let Saiku use the same Mondrian as the BI-Server, but it seems it already does this out-of-the-box?

==== Pentaho Administration Console ====

=== Start-up ===
* go to the directory administration-console
* start via ./start-pac.sh &
* available via http://localhost:8099/
* login: admin/password

===== Apache front-end =====
In our setup, we run Tomcat with a regular Apache http server as reverse-proxy front-end.

* Install the proxy modules for Apache:
	* libapache2-mod-proxy-html
* Enable the proxy modules
	* proxy.load, proxy.conf
	* proxy_http.load
	* proxy_html.load, proxy_html.conf

==== BI-Server ====
'''
<VirtualHost 85.158.202.180:80>
    ServerName   pentaho.domain.org
	ServerAdmin webmaster@domain.org

	ProxyRequests Off

	<Proxy *>
		Order deny,allow
		Allow from all
	</Proxy>

	ProxyPass / http://127.0.0.1:8080/
	ProxyPassReverse / http://127.0.0.1:8080/

	ProxyHTMLExtended On
	SetOutputFilter  proxy-html
	ProxyHTMLURLMap http\x3A\x2F\x2F127.0.0.1\x3A8080\x2Fpentaho\x2F http\x3A\x2F\x2Fpentaho.webenq.org\x2Fpentaho\x2F
</Virtualhost>
'''

The BI server has one difficulty when working with a reverse proxy: whenever a session expires, the user is redirected to the login screen, with the current address stored in a javascript variable (so that you can continue working where you left off, after re-authenticating). This URL is the 127.0.0.1 version provided by the proxy.

The ProxyHTMLExtended switch will instruct the proxy to check javascript code. The ProxyHTMLURLMap provides a string to look for, and what to replace it with.

==== Administration console ====
'''
<VirtualHost 85.158.202.180:80>
    ServerName   pac.domain.org
	ServerAdmin webmaster@domain.org

	ProxyRequests Off

	<Proxy *>
		Order deny,allow
		Allow from all
	</Proxy>

	ProxyPass / http://127.0.0.1:8099/
	ProxyPassReverse / http://127.0.0.1:8099/
</Virtualhost>
'''

